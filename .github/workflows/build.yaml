name: Build Binaries

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Binaries
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            artifact-name: linux-x64
            build-command: npm run create-linux-x64-dist
            sqlite3-path: ./node_modules/sqlite3/build/Release/node_sqlite3.node
          - runs-on: macos-latest
            artifact-name: macos-x64
            build-command: npm run create-mac-x64-dist
            sqlite3-path: ./node_modules/sqlite3/lib/binding/napi-v3-darwin-x64/node_sqlite3.node
#          - runs-on: windows-latest
#            artifact-name: windows-x64
#            build-command: npm run create-win-x64-dist

    steps:
      - uses: Chia-Network/actions/clean-workspace@main

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Node 16.x
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '16.x'

      - name: Ignore Husky
        run: npm set-script prepare ""

      - name: npm install
        run: npm install

      - name: npm cache clear --force
        run: npm cache clear --force

      - name: npm cache rm
        run: npm cache rm --force

      - name: npm cache verify
        run: npm cache verify

      - name: install global packages
        run: npm i -g @babel/cli @babel/preset-env pkg

      - name: create distributions
        run: ${{ matrix.build-command }}

      - name: Make executable
        run: chmod +x climate-warehouse

      - name: Copy sqlite3
        run: cp ${{ sqlite3-path }} ./dist/

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ github.workspace }}/dist

#      - name: Get list of files
#        if: startsWith(github.ref, 'refs/tags/')
#        run: |
#          file_list=$(find ./dist -type f)
#          echo "::set-output name=file-list::$file_list"
#        id: file-list
#
#      - name: Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          files: |
#            ${{ steps.file-list.outputs.file-list }}
